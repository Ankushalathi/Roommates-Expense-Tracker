import { jsPDF } from "jspdf";

const GenerateAndSharePDF = () => {
  const generatePDF = () => {
    const doc = new jsPDF();

    // Title
    doc.setFontSize(16);
    doc.text("Financial Report", 105, 10, null, null, "center");

    // Section 1: Summary
    doc.setFontSize(12);
    doc.text("Summary", 10, 30);
    doc.setFontSize(10);
    doc.text("This is the summary section with details about the overall report.", 10, 40);

    // Section 2: Total Contributions
    doc.setFontSize(12);
    doc.text("Total Contributions", 10, 60);
    doc.setFontSize(10);
    doc.text("Contributions data can be listed here with specific details.", 10, 70);

    // Section 3: Balances
    doc.setFontSize(12);
    doc.text("Balances", 10, 90);
    doc.setFontSize(10);
    doc.text("Balance data, including current balance, previous balance, etc.", 10, 100);

    // Section 4: Transactions
    doc.setFontSize(12);
    doc.text("Transactions", 10, 120);
    doc.setFontSize(10);
    doc.text("Detailed list of transactions goes here.", 10, 130);

    // Footer
    doc.setFontSize(10);
    doc.text("Generated by Financial App", 105, 280, null, null, "center");

    // Save the PDF
    doc.save("Financial_Report.pdf");

    // To Share
    if (navigator.share) {
      doc.output("blob").then((blob) => {
        const file = new File([blob], "Financial_Report.pdf", { type: "application/pdf" });
        navigator.share({
          title: "Financial Report",
          text: "Please find the attached Financial Report PDF.",
          files: [file],
        }).catch((err) => console.error("Sharing failed", err));
      });
    } else {
      alert("Sharing is not supported on this device.");
    }
  };

  return (
    <div>
      <button onClick={generatePDF}>Generate & Share PDF</button>
    </div>
  );
};

export default GenerateAndSharePDF;
